-- create view field_resources from project resources
DROP VIEW IF EXISTS field_resources;

CREATE VIEW field_resources AS
	SELECT 
		MIN(report_date) as report_date,
		MIN(report_year) as report_year,
		MIN(report_status) as report_status,
		MAX(is_offshore) as is_offshore,
		MIN(wk_id) as wk_id,
		MIN(wk_name) as wk_name,
		MIN(wk_lat) as wk_lat,
		MIN(wk_long) as wk_long,
		MIN(wk_area_ori) as wk_area_ori,
		MIN(wk_area_latest) as wk_area_latest,
		MIN(wk_subgroup) as wk_subgroup,
		MIN(psc_eff_start) as psc_eff_start,
		MIN(psc_eff_end) as psc_eff_end,
		MIN(operator_group) as operator_group,
		MIN(operator_name) as operator_name,
		MIN(basin86_id) as basin86_id,
		MIN(basin86) as basin86,
		MIN(basin128_id) as basin128_id,
		MIN(basin128) as basin128,
		MIN(prov_id) as prov_id,
		MIN(province) as province,
		field_id as field_id,
		MIN(field_name) as field_name,
		MIN(field_lat) as field_lat,
		MIN(field_long) as field_long,
		MIN(field_area) as field_area,
		MIN(is_unitization) as is_unitization,
		COUNT(NULLIF(pod_name, '')) as pod_count,
		COUNT(uuid) as project_count,
		SUM(project_isactive) as project_active_count,
		SUM(groovy_isactive) as groovy_count,
		SUM(fusion_isactive) as fusion_count,
		MIN(onstream_year) as onstream_year,
		MIN(onstream_actual) as onstream_actual,
		IIF(COUNT(uuid) > 1, 
			IIF(project_remarks = '' OR project_remarks ISNULL, 
				'', 
				GROUP_CONCAT(CONCAT(project_name, ': ', project_remarks), '\n')), 
			project_remarks
		) as field_remarks,
		MAX(is_discovered) as is_discovered,
		MIN(project_stage) as project_stage,
		MIN(project_class) as project_class,
		MIN(project_level) as project_level,
		MIN(prod_stage) as prod_stage,
		MIN(uncert_level) as uncert_level,
		IIF(COUNT(uuid) > 1,
			IIF(vol_remarks = '' OR vol_remarks ISNULL,
				'',
				GROUP_CONCAT(CONCAT(project_name, ': ', vol_remarks), '\n')
			),
			vol_remarks
		) as field_vol_remarks,
		SUM(rec_oil) as rec_oil,
		SUM(rec_con) as rec_con,
		SUM(rec_ga) as rec_ga,
		SUM(rec_gn) as rec_gn,
		SUM(rec_oc) as rec_oc,
		SUM(rec_an) as rec_an,
		SUM(rec_oil_risked) as rec_oil_risked,
		SUM(rec_con_risked) as rec_con_risked,
		SUM(rec_ga_risked) as rec_ga_risked,
		SUM(rec_gn_risked) as rec_gn_risked,
		SUM(rec_oc_risked) as rec_oc_risked,
		SUM(rec_an_risked) as rec_an_risked,
		SUM(res_oil) as res_oil,
		SUM(res_con) as res_con,
		SUM(res_ga) as res_ga,
		SUM(res_gn) as res_gn,
		SUM(res_oc) as res_oc,
		SUM(res_an) as res_an,
		SUM(prj_ioip) as ioip,
		SUM(prj_igip) as igip,
		SUM(eur_rec_oil) as eur_rec_oil,
		SUM(eur_rec_con) as eur_rec_con,
		SUM(eur_rec_ga) as eur_rec_ga,
		SUM(eur_rec_gn) as eur_rec_gn,
		SUM(eur_rec_oc) as eur_rec_oc,
		SUM(eur_rec_an) as eur_rec_an,
		SUM(eur_res_oil) as eur_res_oil,
		SUM(eur_res_con) as eur_res_con,
		SUM(eur_res_ga) as eur_res_ga,
		SUM(eur_res_gn) as eur_res_gn,
		SUM(eur_res_oc) as eur_res_oc,
		SUM(eur_res_an) as eur_res_an,
		IIF(SUM(prj_ioip) > 0, SUM(cprd_sls_oil) / SUM(prj_ioip), 0) as rf_oil,
		IIF(SUM(prj_igip) > 0, SUM(cprd_sls_gn) / SUM(prj_igip), 0) as rf_gas,
		IIF(SUM(prj_ioip) > 0, SUM(cprd_sls_oil + rec_oil) / SUM(prj_ioip), 0) as urf_rec_oil,
		IIF(SUM(prj_igip) > 0, SUM(cprd_sls_gn + rec_gn) / SUM(prj_igip), 0) as urf_rec_gas,
		IIF(SUM(prj_ioip) > 0, SUM(cprd_sls_oil + res_oil) / SUM(prj_ioip), 0) as urf_res_oil,
		IIF(SUM(prj_igip) > 0, SUM(cprd_sls_gn + res_gn) / SUM(prj_igip), 0) as urf_res_gas,
		SUM(rate_grs_oil) as rate_grs_oil,
		SUM(rate_grs_con) as rate_grs_con,
		SUM(rate_grs_ga) as rate_grs_ga,
		SUM(rate_grs_gn) as rate_grs_gn,
		SUM(rate_grs_oc) as rate_grs_oc,
		SUM(rate_grs_an) as rate_grs_an,
		SUM(rate_sls_oil) as rate_sls_oil,
		SUM(rate_sls_con) as rate_sls_con,
		SUM(rate_sls_ga) as rate_sls_ga,
		SUM(rate_sls_gn) as rate_sls_gn,
		SUM(rate_sls_oc) as rate_sls_oc,
		SUM(rate_sls_an) as rate_sls_an,
		SUM(cprd_grs_oil) as cprd_grs_oil,
		SUM(cprd_grs_con) as cprd_grs_con,
		SUM(cprd_grs_ga) as cprd_grs_ga,
		SUM(cprd_grs_gn) as cprd_grs_gn,
		SUM(cprd_grs_oc) as cprd_grs_oc,
		SUM(cprd_grs_an) as cprd_grs_an,
		SUM(cprd_sls_oil) as cprd_sls_oil,
		SUM(cprd_sls_con) as cprd_sls_con,
		SUM(cprd_sls_ga) as cprd_sls_ga,
		SUM(cprd_sls_gn) as cprd_sls_gn,
		SUM(cprd_sls_oc) as cprd_sls_oc,
		SUM(cprd_sls_an) as cprd_sls_an,
		SUM(dcpy_um_oil) as dcpy_um_oil,
		SUM(dcpy_um_con) as dcpy_um_con,
		SUM(dcpy_um_ga) as dcpy_um_ga,
		SUM(dcpy_um_gn) as dcpy_um_gn,
		SUM(dcpy_um_oc) as dcpy_um_oc,
		SUM(dcpy_um_an) as dcpy_um_an,
		SUM(dcpy_ppa_oil) as dcpy_ppa_oil,
		SUM(dcpy_ppa_con) as dcpy_ppa_con,
		SUM(dcpy_ppa_ga) as dcpy_ppa_ga,
		SUM(dcpy_ppa_gn) as dcpy_ppa_gn,
		SUM(dcpy_ppa_oc) as dcpy_ppa_oc,
		SUM(dcpy_ppa_an) as dcpy_ppa_an,
		SUM(dcpy_wi_oil) as dcpy_wi_oil,
		SUM(dcpy_wi_con) as dcpy_wi_con,
		SUM(dcpy_wi_ga) as dcpy_wi_ga,
		SUM(dcpy_wi_gn) as dcpy_wi_gn,
		SUM(dcpy_wi_oc) as dcpy_wi_oc,
		SUM(dcpy_wi_an) as dcpy_wi_an,
		SUM(dcpy_cio_oil) as dcpy_cio_oil,
		SUM(dcpy_cio_con) as dcpy_cio_con,
		SUM(dcpy_cio_ga) as dcpy_cio_ga,
		SUM(dcpy_cio_gn) as dcpy_cio_gn,
		SUM(dcpy_cio_oc) as dcpy_cio_oc,
		SUM(dcpy_cio_an) as dcpy_cio_an,
		SUM(dcpy_uc_oil) as dcpy_uc_oil,
		SUM(dcpy_uc_con) as dcpy_uc_con,
		SUM(dcpy_uc_ga) as dcpy_uc_ga,
		SUM(dcpy_uc_gn) as dcpy_uc_gn,
		SUM(dcpy_uc_oc) as dcpy_uc_oc,
		SUM(dcpy_uc_an) as dcpy_uc_an,
		SUM(ghv_avg) as ghv_avg,
		(
			  lower(hex(randomblob(4))) || '-' ||
			  lower(hex(randomblob(2))) || '-' ||
			  '4' || substr(hex(randomblob(2)), 2) || '-' ||
			  substr('89ab', 1 + (abs(random()) % 4), 1) || substr(hex(randomblob(2)), 2) || '-' ||
			  lower(hex(randomblob(6)))
		) as uuid
	FROM project_resources pr
	GROUP BY report_year, wk_id, field_id, project_stage, project_class, uncert_level
	ORDER BY report_year DESC, wk_name, field_name, project_stage, project_class, uncert_level;

-- create view wa_resources
DROP VIEW IF EXISTS wa_resources;

CREATE VIEW wa_resources AS
	SELECT 
		MIN(report_date) as report_date,
		MIN(report_year) as report_year,
		MIN(report_status) as report_status,
		MAX(is_offshore) as is_offshore,
		mAX(is_discovered) as is_discovered,
		MIN(wk_id) as wk_id,
		MIN(wk_name) as wk_name,
		MIN(wk_lat) as wk_lat,
		MIN(wk_long) as wk_long,
		MIN(wk_area_ori) as wk_area_ori,
		MIN(wk_area_latest) as wk_area_latest,
		MIN(wk_subgroup) as wk_subgroup,
		MIN(psc_eff_start) as psc_eff_start,
		MIN(psc_eff_end) as psc_eff_end,
		MIN(operator_group) as operator_group,
		MIN(operator_name) as operator_name,
		/*MIN(basin86_id) as basin86_id,
		MIN(basin86) as basin86,
		MIN(basin128_id) as basin128_id,
		MIN(basin128) as basin128,
		MIN(prov_id) as prov_id,
		MIN(province) as province,*/
		COUNT(uuid) as field_count,
		SUM(is_unitization) as unitisasi_count,
		SUM(pod_count) as pod_count,
		SUM(project_count) as project_count,
		SUM(project_active_count) as project_active_count,
		SUM(groovy_count) as groovy_count,
		SUM(fusion_count) as fusion_count,
		MIN(onstream_year) as onstream_year,
		MIN(onstream_actual) as onstream_actual,
		IIF(COUNT(uuid) > 1, 
			IIF(field_remarks = '' OR field_remarks ISNULL, 
				'', 
				GROUP_CONCAT(CONCAT(field_name, ': ', field_remarks), '\n\n')), 
			field_remarks
		) as wa_remarks,
		MIN(project_stage) as project_stage,
		MIN(project_class) as project_class,
		MIN(project_level) as project_level,
		MIN(prod_stage) as prod_stage,
		MIN(uncert_level) as uncert_level,
		IIF(COUNT(uuid) > 1,
			IIF(field_vol_remarks = '' OR field_vol_remarks ISNULL,
				'',
				GROUP_CONCAT(CONCAT(field_name, ': ', field_vol_remarks), '\n\n')
			),
			field_vol_remarks
		) as wa_vol_remarks,
		SUM(rec_oil) as rec_oil,
		SUM(rec_con) as rec_con,
		SUM(rec_ga) as rec_ga,
		SUM(rec_gn) as rec_gn,
		SUM(rec_oc) as rec_oc,
		SUM(rec_an) as rec_an,
		SUM(rec_oil_risked) as rec_oil_risked,
		SUM(rec_con_risked) as rec_con_risked,
		SUM(rec_ga_risked) as rec_ga_risked,
		SUM(rec_gn_risked) as rec_gn_risked,
		SUM(rec_oc_risked) as rec_oc_risked,
		SUM(rec_an_risked) as rec_an_risked,
		SUM(res_oil) as res_oil,
		SUM(res_con) as res_con,
		SUM(res_ga) as res_ga,
		SUM(res_gn) as res_gn,
		SUM(res_oc) as res_oc,
		SUM(res_an) as res_an,
		SUM(ioip) as ioip,
		SUM(igip) as igip,
		SUM(eur_rec_oil) as eur_rec_oil,
		SUM(eur_rec_con) as eur_rec_con,
		SUM(eur_rec_ga) as eur_rec_ga,
		SUM(eur_rec_gn) as eur_rec_gn,
		SUM(eur_rec_oc) as eur_rec_oc,
		SUM(eur_rec_an) as eur_rec_an,
		SUM(eur_res_oil) as eur_res_oil,
		SUM(eur_res_con) as eur_res_con,
		SUM(eur_res_ga) as eur_res_ga,
		SUM(eur_res_gn) as eur_res_gn,
		SUM(eur_res_oc) as eur_res_oc,
		SUM(eur_res_an) as eur_res_an,
		IIF(SUM(ioip) > 0, SUM(cprd_sls_oil) / SUM(ioip), 0) as rf_oil,
		IIF(SUM(igip) > 0, SUM(cprd_sls_gn) / SUM(igip), 0) as rf_gas,
		IIF(SUM(ioip) > 0, SUM(cprd_sls_oil + rec_oil) / SUM(ioip), 0) as urf_rec_oil,
		IIF(SUM(igip) > 0, SUM(cprd_sls_gn + rec_gn) / SUM(igip), 0) as urf_rec_gas,
		IIF(SUM(ioip) > 0, SUM(cprd_sls_oil + res_oil) / SUM(ioip), 0) as urf_res_oil,
		IIF(SUM(igip) > 0, SUM(cprd_sls_gn + res_gn) / SUM(igip), 0) as urf_res_gas,
		SUM(rate_grs_oil) as rate_grs_oil,
		SUM(rate_grs_con) as rate_grs_con,
		SUM(rate_grs_ga) as rate_grs_ga,
		SUM(rate_grs_gn) as rate_grs_gn,
		SUM(rate_grs_oc) as rate_grs_oc,
		SUM(rate_grs_an) as rate_grs_an,
		SUM(rate_sls_oil) as rate_sls_oil,
		SUM(rate_sls_con) as rate_sls_con,
		SUM(rate_sls_ga) as rate_sls_ga,
		SUM(rate_sls_gn) as rate_sls_gn,
		SUM(rate_sls_oc) as rate_sls_oc,
		SUM(rate_sls_an) as rate_sls_an,
		SUM(cprd_grs_oil) as cprd_grs_oil,
		SUM(cprd_grs_con) as cprd_grs_con,
		SUM(cprd_grs_ga) as cprd_grs_ga,
		SUM(cprd_grs_gn) as cprd_grs_gn,
		SUM(cprd_grs_oc) as cprd_grs_oc,
		SUM(cprd_grs_an) as cprd_grs_an,
		SUM(cprd_sls_oil) as cprd_sls_oil,
		SUM(cprd_sls_con) as cprd_sls_con,
		SUM(cprd_sls_ga) as cprd_sls_ga,
		SUM(cprd_sls_gn) as cprd_sls_gn,
		SUM(cprd_sls_oc) as cprd_sls_oc,
		SUM(cprd_sls_an) as cprd_sls_an,
		SUM(dcpy_um_oil) as dcpy_um_oil,
		SUM(dcpy_um_con) as dcpy_um_con,
		SUM(dcpy_um_ga) as dcpy_um_ga,
		SUM(dcpy_um_gn) as dcpy_um_gn,
		SUM(dcpy_um_oc) as dcpy_um_oc,
		SUM(dcpy_um_an) as dcpy_um_an,
		SUM(dcpy_ppa_oil) as dcpy_ppa_oil,
		SUM(dcpy_ppa_con) as dcpy_ppa_con,
		SUM(dcpy_ppa_ga) as dcpy_ppa_ga,
		SUM(dcpy_ppa_gn) as dcpy_ppa_gn,
		SUM(dcpy_ppa_oc) as dcpy_ppa_oc,
		SUM(dcpy_ppa_an) as dcpy_ppa_an,
		SUM(dcpy_wi_oil) as dcpy_wi_oil,
		SUM(dcpy_wi_con) as dcpy_wi_con,
		SUM(dcpy_wi_ga) as dcpy_wi_ga,
		SUM(dcpy_wi_gn) as dcpy_wi_gn,
		SUM(dcpy_wi_oc) as dcpy_wi_oc,
		SUM(dcpy_wi_an) as dcpy_wi_an,
		SUM(dcpy_cio_oil) as dcpy_cio_oil,
		SUM(dcpy_cio_con) as dcpy_cio_con,
		SUM(dcpy_cio_ga) as dcpy_cio_ga,
		SUM(dcpy_cio_gn) as dcpy_cio_gn,
		SUM(dcpy_cio_oc) as dcpy_cio_oc,
		SUM(dcpy_cio_an) as dcpy_cio_an,
		SUM(dcpy_uc_oil) as dcpy_uc_oil,
		SUM(dcpy_uc_con) as dcpy_uc_con,
		SUM(dcpy_uc_ga) as dcpy_uc_ga,
		SUM(dcpy_uc_gn) as dcpy_uc_gn,
		SUM(dcpy_uc_oc) as dcpy_uc_oc,
		SUM(dcpy_uc_an) as dcpy_uc_an,
		SUM(ghv_avg) as ghv_avg,
		(
			  lower(hex(randomblob(4))) || '-' ||
			  lower(hex(randomblob(2))) || '-' ||
			  '4' || substr(hex(randomblob(2)), 2) || '-' ||
			  substr('89ab', 1 + (abs(random()) % 4), 1) || substr(hex(randomblob(2)), 2) || '-' ||
			  lower(hex(randomblob(6)))
		) as uuid
	FROM field_resources fr
	GROUP BY report_year, wk_name, project_stage, project_class, uncert_level
	ORDER BY report_year DESC, wk_name, project_stage, project_class, uncert_level;

DROP VIEW IF EXISTS nkri_resources;

CREATE VIEW nkri_resources AS
	SELECT 
		MIN(report_year) as report_year,
		MIN(report_status) as report_status,
		COUNT(NULLIF(wk_id, '')) as wa_count,
		SUM(field_count) as field_count,
		SUM(unitisasi_count) as unitisasi_count,
		SUM(pod_count) as pod_count,
		SUM(project_count) as project_count,
		SUM(project_active_count) as project_active_count,
		SUM(groovy_count) as groovy_count,
		SUM(fusion_count) as fusion_count,
		MAX(is_discovered) as is_discovered,
		MIN(project_stage) as project_stage,
		MIN(project_class) as project_class,
		MIN(uncert_level) as uncert_level,
		SUM(rec_oil) as rec_oil,
		SUM(rec_con) as rec_con,
		SUM(rec_ga) as rec_ga,
		SUM(rec_gn) as rec_gn,
		SUM(rec_oc) as rec_oc,
		SUM(rec_an) as rec_an,
		SUM(rec_oil_risked) as rec_oil_risked,
		SUM(rec_con_risked) as rec_con_risked,
		SUM(rec_ga_risked) as rec_ga_risked,
		SUM(rec_gn_risked) as rec_gn_risked,
		SUM(rec_oc_risked) as rec_oc_risked,
		SUM(rec_an_risked) as rec_an_risked,
		SUM(res_oil) as res_oil,
		SUM(res_con) as res_con,
		SUM(res_ga) as res_ga,
		SUM(res_gn) as res_gn,
		SUM(res_oc) as res_oc,
		SUM(res_an) as res_an,
		SUM(ioip) as ioip,
		SUM(igip) as igip,
		SUM(eur_rec_oil) as eur_rec_oil,
		SUM(eur_rec_con) as eur_rec_con,
		SUM(eur_rec_ga) as eur_rec_ga,
		SUM(eur_rec_gn) as eur_rec_gn,
		SUM(eur_rec_oc) as eur_rec_oc,
		SUM(eur_rec_an) as eur_rec_an,
		SUM(eur_res_oil) as eur_res_oil,
		SUM(eur_res_con) as eur_res_con,
		SUM(eur_res_ga) as eur_res_ga,
		SUM(eur_res_gn) as eur_res_gn,
		SUM(eur_res_oc) as eur_res_oc,
		SUM(eur_res_an) as eur_res_an,
		SUM(rate_grs_oil) as rate_grs_oil,
		SUM(rate_grs_con) as rate_grs_con,
		SUM(rate_grs_ga) as rate_grs_ga,
		SUM(rate_grs_gn) as rate_grs_gn,
		SUM(rate_grs_oc) as rate_grs_oc,
		SUM(rate_grs_an) as rate_grs_an,
		SUM(rate_sls_oil) as rate_sls_oil,
		SUM(rate_sls_con) as rate_sls_con,
		SUM(rate_sls_ga) as rate_sls_ga,
		SUM(rate_sls_gn) as rate_sls_gn,
		SUM(rate_sls_oc) as rate_sls_oc,
		SUM(rate_sls_an) as rate_sls_an,
		SUM(cprd_grs_oil) as cprd_grs_oil,
		SUM(cprd_grs_con) as cprd_grs_con,
		SUM(cprd_grs_ga) as cprd_grs_ga,
		SUM(cprd_grs_gn) as cprd_grs_gn,
		SUM(cprd_grs_oc) as cprd_grs_oc,
		SUM(cprd_grs_an) as cprd_grs_an,
		SUM(cprd_sls_oil) as cprd_sls_oil,
		SUM(cprd_sls_con) as cprd_sls_con,
		SUM(cprd_sls_ga) as cprd_sls_ga,
		SUM(cprd_sls_gn) as cprd_sls_gn,
		SUM(cprd_sls_oc) as cprd_sls_oc,
		SUM(cprd_sls_an) as cprd_sls_an,
		SUM(dcpy_um_oil) as dcpy_um_oil,
		SUM(dcpy_um_con) as dcpy_um_con,
		SUM(dcpy_um_ga) as dcpy_um_ga,
		SUM(dcpy_um_gn) as dcpy_um_gn,
		SUM(dcpy_um_oc) as dcpy_um_oc,
		SUM(dcpy_um_an) as dcpy_um_an,
		SUM(dcpy_ppa_oil) as dcpy_ppa_oil,
		SUM(dcpy_ppa_con) as dcpy_ppa_con,
		SUM(dcpy_ppa_ga) as dcpy_ppa_ga,
		SUM(dcpy_ppa_gn) as dcpy_ppa_gn,
		SUM(dcpy_ppa_oc) as dcpy_ppa_oc,
		SUM(dcpy_ppa_an) as dcpy_ppa_an,
		SUM(dcpy_wi_oil) as dcpy_wi_oil,
		SUM(dcpy_wi_con) as dcpy_wi_con,
		SUM(dcpy_wi_ga) as dcpy_wi_ga,
		SUM(dcpy_wi_gn) as dcpy_wi_gn,
		SUM(dcpy_wi_oc) as dcpy_wi_oc,
		SUM(dcpy_wi_an) as dcpy_wi_an,
		SUM(dcpy_cio_oil) as dcpy_cio_oil,
		SUM(dcpy_cio_con) as dcpy_cio_con,
		SUM(dcpy_cio_ga) as dcpy_cio_ga,
		SUM(dcpy_cio_gn) as dcpy_cio_gn,
		SUM(dcpy_cio_oc) as dcpy_cio_oc,
		SUM(dcpy_cio_an) as dcpy_cio_an,
		SUM(dcpy_uc_oil) as dcpy_uc_oil,
		SUM(dcpy_uc_con) as dcpy_uc_con,
		SUM(dcpy_uc_ga) as dcpy_uc_ga,
		SUM(dcpy_uc_gn) as dcpy_uc_gn,
		SUM(dcpy_uc_oc) as dcpy_uc_oc,
		SUM(dcpy_uc_an) as dcpy_uc_an,
		SUM(ghv_avg) as ghv_avg,
		(
			  lower(hex(randomblob(4))) || '-' ||
			  lower(hex(randomblob(2))) || '-' ||
			  '4' || substr(hex(randomblob(2)), 2) || '-' ||
			  substr('89ab', 1 + (abs(random()) % 4), 1) || substr(hex(randomblob(2)), 2) || '-' ||
			  lower(hex(randomblob(6)))
		) as uuid
	FROM wa_resources wr
	GROUP BY report_year, project_stage, project_class, uncert_level
	ORDER BY report_year DESC, project_stage, project_class, uncert_level;
